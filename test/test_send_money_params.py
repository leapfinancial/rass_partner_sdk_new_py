# coding: utf-8

"""
    

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from raassdkpyv2.models.send_money_params import SendMoneyParams  # noqa: E501

class TestSendMoneyParams(unittest.TestCase):
    """SendMoneyParams unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SendMoneyParams:
        """Test SendMoneyParams
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SendMoneyParams`
        """
        model = SendMoneyParams()  # noqa: E501
        if include_optional:
            return SendMoneyParams(
                correlation_id = '',
                source_payment_method = raassdkpyv2.models.raa_s_payment_method.RaaSPaymentMethod(
                    payment_token = raassdkpyv2.models.payment_token.PaymentToken(
                        payment_type = 0, 
                        display_name = '', 
                        transaction_identifier = '', 
                        payment_network = '', 
                        data = '', ), 
                    status = 'Created', 
                    application = '', 
                    account_id = '', 
                    longitude = 1.337, 
                    latitude = 1.337, 
                    phone_number = '', 
                    country = '', 
                    zip_code = '', 
                    state = '', 
                    city = '', 
                    address2 = '', 
                    address1 = '', 
                    currency = '', 
                    external_id = '', 
                    card_network = '', 
                    cardtype = 'DebitCard', 
                    security_code = '', 
                    expiration_month = '', 
                    expiration_year = '', 
                    expiration_date = '', 
                    name_on_card = '', 
                    number = '', 
                    beneficiary_account_id = '', 
                    token_data = '', 
                    card_type = 'DebitCard', 
                    account_number = '', 
                    bank_entity_number = '', 
                    bank_name = '', 
                    bank_account_type = 'CheckingAccount', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_primary = True, 
                    type = 'MobileWallet', 
                    name = '', 
                    id = '', ),
                destination_payment_method = raassdkpyv2.models.raa_s_payment_method.RaaSPaymentMethod(
                    payment_token = raassdkpyv2.models.payment_token.PaymentToken(
                        payment_type = 0, 
                        display_name = '', 
                        transaction_identifier = '', 
                        payment_network = '', 
                        data = '', ), 
                    status = 'Created', 
                    application = '', 
                    account_id = '', 
                    longitude = 1.337, 
                    latitude = 1.337, 
                    phone_number = '', 
                    country = '', 
                    zip_code = '', 
                    state = '', 
                    city = '', 
                    address2 = '', 
                    address1 = '', 
                    currency = '', 
                    external_id = '', 
                    card_network = '', 
                    cardtype = 'DebitCard', 
                    security_code = '', 
                    expiration_month = '', 
                    expiration_year = '', 
                    expiration_date = '', 
                    name_on_card = '', 
                    number = '', 
                    beneficiary_account_id = '', 
                    token_data = '', 
                    card_type = 'DebitCard', 
                    account_number = '', 
                    bank_entity_number = '', 
                    bank_name = '', 
                    bank_account_type = 'CheckingAccount', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_primary = True, 
                    type = 'MobileWallet', 
                    name = '', 
                    id = '', ),
                amount = 1.337,
                currency = '',
                code = '',
                status = '',
                sender_amount = 1.337,
                sender_currency = '',
                recipient_amount = 1.337,
                recipient_currency = '',
                fee_type = 'UserPays',
                source_fee = 1.337,
                transaction_fee = 1.337,
                destination_fee = 1.337,
                exchange_rate = 1.337,
                call_location_longitude = 1.337,
                call_location_latitude = 1.337,
                reason = '',
                tenant_id = '',
                user_tenant_id = '',
                tenant_fee = 1.337,
                send_to = ''
            )
        else:
            return SendMoneyParams(
                correlation_id = '',
                source_payment_method = raassdkpyv2.models.raa_s_payment_method.RaaSPaymentMethod(
                    payment_token = raassdkpyv2.models.payment_token.PaymentToken(
                        payment_type = 0, 
                        display_name = '', 
                        transaction_identifier = '', 
                        payment_network = '', 
                        data = '', ), 
                    status = 'Created', 
                    application = '', 
                    account_id = '', 
                    longitude = 1.337, 
                    latitude = 1.337, 
                    phone_number = '', 
                    country = '', 
                    zip_code = '', 
                    state = '', 
                    city = '', 
                    address2 = '', 
                    address1 = '', 
                    currency = '', 
                    external_id = '', 
                    card_network = '', 
                    cardtype = 'DebitCard', 
                    security_code = '', 
                    expiration_month = '', 
                    expiration_year = '', 
                    expiration_date = '', 
                    name_on_card = '', 
                    number = '', 
                    beneficiary_account_id = '', 
                    token_data = '', 
                    card_type = 'DebitCard', 
                    account_number = '', 
                    bank_entity_number = '', 
                    bank_name = '', 
                    bank_account_type = 'CheckingAccount', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_primary = True, 
                    type = 'MobileWallet', 
                    name = '', 
                    id = '', ),
                amount = 1.337,
                currency = '',
                sender_amount = 1.337,
                sender_currency = '',
                recipient_amount = 1.337,
                recipient_currency = '',
                fee_type = 'UserPays',
                source_fee = 1.337,
                transaction_fee = 1.337,
                destination_fee = 1.337,
                exchange_rate = 1.337,
                call_location_longitude = 1.337,
                call_location_latitude = 1.337,
                send_to = '',
        )
        """

    def testSendMoneyParams(self):
        """Test SendMoneyParams"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
